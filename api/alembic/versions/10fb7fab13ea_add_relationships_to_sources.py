from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '10fb7fab13ea'
down_revision: Union[str, Sequence[str], None] = '631edb7ea0a1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # --- PARTE 1: EXPENSES (Add source_id) ---
    with op.batch_alter_table('expenses', schema=None) as batch_op:
        # Añade la columna 'source_id'
        batch_op.add_column(sa.Column('source_id', sa.Integer(), nullable=False))
        # Crea la clave foránea con nombre explícito
        batch_op.create_foreign_key("fk_expenses_source_id", 'sources', ['source_id'], ['id'])

    # --- PARTE 2: SOURCES (Añadir 'type' con corrección para SQLite) ---
    # 1. Definimos el Enum para reuso
    sourcetypeenum = sa.Enum('income', 'saving', 'investment', 'expense', 'other', name='sourcetypeenum')

    with op.batch_alter_table('sources', schema=None) as batch_op:
        # 2. Añadir la columna como TEMPORALMENTE nullable=True
        batch_op.add_column(sa.Column('type', sourcetypeenum, nullable=True))

    # 3. Rellenar los valores existentes con un valor por defecto ('other')
    # ¡CRUCIAL para SQLite!
    op.execute("UPDATE sources SET type = 'other' WHERE type IS NULL")

    with op.batch_alter_table('sources', schema=None) as batch_op:
        # 4. Aplicar la restricción NOT NULL (alter_column)
        batch_op.alter_column('type', existing_type=sourcetypeenum, nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # --- PARTE 1: SOURCES (Revertir 'type') ---
    with op.batch_alter_table('sources', schema=None) as batch_op:
        batch_op.drop_column('type')

    # --- PARTE 2: EXPENSES (Revertir 'source_id') ---
    with op.batch_alter_table('expenses', schema=None) as batch_op:
        # Eliminar la clave foránea, usando el nombre explícito
        batch_op.drop_constraint("fk_expenses_source_id", type_='foreignkey')
        # Eliminar la columna
        batch_op.drop_column('source_id')

    # ### end Alembic commands ###
